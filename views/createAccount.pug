doctype
html(lang='en')
  head
    include includes/head.pug
    title Create your SCCS account
  body
    .container-fluid.p-4(style='max-width: 768px')
      .row
        .col-md-8
          h1.mb-4 Get your SCCS account
          p
            | Your SCCS account lets you manage your mailing lists, create RSD
            | events, sign into computers in the Media Lounge, and much more.
            | SCCS accounts are available to all Swarthmore students, faculty,
            | and staff&mdash;and you'll still be able to access it after
            | graduation.
          form#createForm.form-signin.needs-validation(
            action='/account/create',
            method='post',
            novalidate
          )
            .form-group.mb-3
              .form-floating
                script(type='text/javascript').
                  function validateUsername() {
                    console.log(this);
                  }
                input#usernameInput.form-control(
                  type='text',
                  pattern='^[a-z][-a-z0-9]*$',
                  name='username',
                  placeholder='Username',
                  aria-describedby='usernameHelp',
                  onchange='validateUsername',
                  required
                )
                label(for='usernameInput') Username
                .valid-feedback Username is available
                #usernameFeedback.invalid-feedback 
                small#usernameHelp.text-muted This should be at least vaguely
                  | related to your real name, and contain only lowercase
                  | letters, numbers, and hyphens.
            .form-group.mb-3
              .form-floating
                input#emailInput.form-control(
                  type='email',
                  pattern='.+@swarthmore\.edu',
                  name='email',
                  placeholder='Email',
                  required
                )
                label(for='emailInput') Swarthmore email
                .invalid-feedback Please provide a valid @swarthmore.edu email
            .form-group.mb-3
              .form-floating
                input#emailInput.form-control(
                  type='text',
                  name='name',
                  placeholder='Name',
                  required
                )
                label(for='nameInput') Full name
                .invalid-feedback Please provide a valid name
            .form-group.mb-3 
              each val in classes
                .form-check.form-check-inline
                  input.form-check-input(
                    type='radio',
                    name='classYear',
                    id='classYear1' + val,
                    value=val,
                    required
                  )
                  label.form-check-label(
                    for='classYear1' + val,
                    style='text-transform: capitalize'
                  )= /^\d+$/.test(val) ? '\u2019' + val : val
            button#submitButton.btn.btn-large.btn-primary.mb-3(type='submit') Request Your Account
          script(type='text/javascript').
            // form validation
            (function () {
              'use strict';

              async function fetchUsernameResult(username) {
                return await fetch('/account/username-ok/' + username).then(async function (res) {
                  return (await res.text()) == 'true';
                });
              }
              var usernameInput = document.getElementById('usernameInput');
              var usernameFeedback = document.getElementById('usernameFeedback');

              async function checkUsername() {
                if (usernameInput.checkValidity()) {
                  if (await fetchUsernameResult(usernameInput.value)) {
                    usernameInput.classList.add('is-valid');
                    usernameInput.classList.remove('is-invalid');
                    usernameInput.setCustomValidity('');
                    return true;
                  } else {
                    usernameFeedback.innerHTML = 'Username is already taken';
                  }
                } else {
                  if (usernameInput.value) {
                    usernameFeedback.innerHTML = 'Username contains an invalid character';
                  } else {
                    usernameFeedback.innerHTML = '';
                  }
                }
                usernameInput.classList.add('is-invalid');
                usernameInput.classList.remove('is-valid');
                usernameInput.setCustomValidity('invalid');
                return false;
              }

              var form = document.getElementById('createForm');
              form.addEventListener(
                'submit',
                async function (event) {
                  event.preventDefault();

                  if (!form.checkValidity() || (await checkUsername()) === false) {
                    event.stopPropagation();
                  } else {
                    form.submit();
                  }

                  form.classList.add('was-validated');
                },
                false
              );

              usernameInput.addEventListener(
                'change',
                function (event) {
                  usernameInput.setCustomValidity('');
                  checkUsername();
                },
                false
              );

              // lil thing so we don't check usernames on every keypress
              // FIXME probably would be good to check invalid characters on
              // every keypress, though
              var typingTimer;
              var doneTypingInterval = 500;
              function doneTyping() {
                usernameInput.setCustomValidity('');
                checkUsername();
              }

              usernameInput.addEventListener('input', function (event) {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(doneTyping, doneTypingInterval);
              });

              var submitButton = document.getElementById('submitButton');
            })();
        .col
    include includes/body-scripts.pug
