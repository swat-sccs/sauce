include include/sauce-common

+sauce-layout('Account info')(pageId='account', user=user)
  h1.mb-2 Your SCCS Account
  h6.mb-4 Welcome, #{ user.uid }.

  p.mb-0 Your Swarthmore email is #[code= user.swatmail].
  p.small.text-muted If you need to change this, #[a(href='mailto:staff@sccs.swarthmore.edu') contact SCCS staff.]

  .mb-4
    h2 Password Settings

    script#passwordResetSuccess(type='text/html')
      .alert.alert-success.alert-dismissible.fade.show(role='alert')
        p.mb-0.
          A link to reset your password has been sent to #{ user.email || user.swatmail }.
        button.btn-close(type='button', data-bs-dismiss='alert', aria-label='Close')
    script#passwordResetFailure(type='text/html')
      .alert.alert-success.alert-dismissible.fade.show(role='alert')
        p.mb-0.
          An unexpected error occured. Please try again later.
        button.btn-close(type='button', data-bs-dismiss='alert', aria-label='Close')
    script#buttonProcessing(type='text/html')
      span.spinner-border.spinner-border-sm(role='status', aria-hidden='true')
      | &nbsp;Processing...

    #alertContainer

    p SCCS staff members will never ask for your password.
    button#changePasswordButton.btn.btn-primary(type='button') Change password

  h2 Advanced Settings

  #advancedAccordion.accordion
    .accordion-item
      h2#headingEmail.accordion-header
        button.accordion-button.collapsed(
          type='button',
          data-bs-toggle='collapse',
          data-bs-target='#collapseEmail',
          aria-expanded='false',
          aria-controls='collapseEmail'
        )
          | SCCS account configuration
      #collapseEmail.accordion-collapse.collapse(aria-labelledby='headingEmail')
        .accordion-body
          h3 Account Email
          button.btn.btn-link.btn-sm.p-0.mb-2(
            data-bs-toggle='modal',
            data-bs-target='#emailHelpModal'
          ) What's this?

          p Your current default account email is:
          .card.mb-3(style='width: 100%')
            .card-body
              pre.mb-0= emailAttr

          hr

          h4 Change email

          form#emailForm.container.mb-3.gx-0(
            action='/account/configEmail',
            method='post',
            novalidate
          )
            input(type='hidden', name='_csrf', value=csrfToken())
            .row
              .col-12
                input#email.form-control.form-control-md(
                  type='text',
                  aria-label='input for a new email',
                  name='email'
                )
            .row
              .col-auto.mt-3
                //- TODO add a confirmation
                button.btn.btn-sm.btn-primary(type='submit') Apply

          //- this is separate from the main script because it has to activate after all the form stuff is there
          script(type='text/javascript').
            (function () {
              'use strict';
              const form = document.getElementById('emailForm');

              form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                  event.preventDefault();
                  event.stopPropagation();

                  Array.prototype.slice.call(document.querySelectorAll('#emailForm .validate-me')).forEach(function (item) {
                    item.classList.add('was-validated');
                  });
                }
              });
            })();

    .accordion-item
      h2#headingAdvanced.accordion-header
        button.accordion-button.collapsed(
          type='button',
          data-bs-toggle='collapse',
          data-bs-target='#collapseAdvanced',
          aria-expanded='false',
          aria-controls='collapseAdvanced'
        )
          | Email forwarding configuration
      #collapseAdvanced.accordion-collapse.collapse(aria-labelledby='headingAdvanced')
        .accordion-body
          h3 .forward file
          button.btn.btn-link.btn-sm.p-0.mb-2(
            data-bs-toggle='modal',
            data-bs-target='#forwardingHelpModal'
          ) What's this?

          if forwardFileText
            p Your .forward file (at #[code #{ user.homeDirectory }/.forward]) contains the following:
            .card.mb-3(style='width: 100%')
              .card-body
                pre.mb-0= forwardFileText
          else
            p You currently don't have a .forward file.

          hr

          h4 Update forwarding
          p.mb-1 Deliver messages sent to my SCCS email:

          form#forwardForm.container.mb-3.gx-0(
            action='/account/configForwarding',
            method='post',
            novalidate
          )
            input(type='hidden', name='_csrf', value=csrfToken())
            .row
              .col
                .form-check
                  input#forwardSwarthmoreCheck.form-check-input(
                    type='checkbox',
                    name='forwardSwarthmore',
                    value='true'
                  )
                  label.form-check-label(for='forwardSwarthmoreCheck') to my Swarthmore email (#[code= user.swatmail])
            .row.align-items-center
              .col-auto.pe-0
                .form-check
                  input#forwardCustomCheck.form-check-input(
                    type='checkbox',
                    name='forwardCustom',
                    value='true'
                  )
                  label.form-check-label(for='forwardCustomCheck') to another email:
              .col.px-1.validate-me
                //- FIXME: HTML email validation and Joi's server-side validation disagree on what a
                //-  valid email is
                input#forwardCustomEmail.form-control.form-control-sm(
                  type='email',
                  aria-label='input for another email',
                  name='customEmail',
                  disabled
                )
            .row
              .col
                .form-check
                  input#forwardLocalCheck.form-check-input(
                    type='checkbox',
                    name='forwardLocal',
                    value='true'
                  )
                  label.form-check-label(for='forwardLocalCheck') to my SCCS mailbox
            .row 
              .col-auto.mt-1
                //- TODO add a confirmation
                button.btn.btn-sm.btn-primary(type='submit') Apply

          //- this is separate from the main script because it has to activate after all the form stuff is there
          script(type='text/javascript').
            (function () {
              'use strict';
              const form = document.getElementById('forwardForm');

              form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                  event.preventDefault();
                  event.stopPropagation();

                  Array.prototype.slice.call(document.querySelectorAll('#forwardForm .validate-me')).forEach(function (item) {
                    item.classList.add('was-validated');
                  });
                }
              });
            })();

    .accordion-item
      h2#headingSSH.accordion-header
        button.accordion-button.collapsed(
          type='button',
          data-bs-toggle='collapse',
          data-bs-target='#collapseSSH',
          aria-expanded='false',
          aria-controls='collapseSSH'
        )
          | SSH access configuration
      #collapseSSH.accordion-collapse.collapse(aria-labelledby='headingSSH')
        .accordion-body
          h3 Authorized Keys
          button.btn.btn-link.btn-sm.p-0.mb-2(
            data-bs-toggle='modal',
            data-bs-target='#sshHelpModal'
          ) What's this?

          if sshFileText
            p Your authorized_keys file (at #[code #{ user.homeDirectory }/.ssh/authorized_keys]) contains the following:
            .card.mb-3(style='width: 100%')
              .card-body
                pre.mb-0= sshFileText
          else
            p You currently don't have an authorized_keys file.

          hr

          h4 Add keys

          form#sshForm.container.mb-3.gx-0(
            action='/account/configSSH',
            method='post',
            novalidate
          )
            input(type='hidden', name='_csrf', value=csrfToken())
            .row
              .col-12
                input#sshKeys.form-control.form-control-md(
                  type='text',
                  aria-label='input for another ssh key',
                  name='keys'
                )
            .row
              .col-auto.mt-3
                //- TODO add a confirmation
                button.btn.btn-sm.btn-primary(type='submit') Apply

          //- this is separate from the main script because it has to activate after all the form stuff is there
          script(type='text/javascript').
            (function () {
              'use strict';
              const form = document.getElementById('sshForm');

              form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                  event.preventDefault();
                  event.stopPropagation();

                  Array.prototype.slice.call(document.querySelectorAll('#sshForm .validate-me')).forEach(function (item) {
                    item.classList.add('was-validated');
                  });
                }
              });
            })();


  #forwardingHelpModal.modal.fade(
    tabindex='-1',
    aria-labelledby='forwardingHelpModalTitle',
    aria-hidden='true'
  )
    .modal-dialog
      .modal-content 
        .modal-header
          h5#forwardingHelpModalTitle.modal-title About Email Forwarding
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        .modal-body
          p.
            Your SCCS account also gives you access to an email account hosted on our servers at 
            #[code #{ user.uid }@sccs.swarthmore.edu]. This service is mostly offered for historical
            reasons, dating back to an era where email accounts were associated with a specific
            machine and free email providers such as Gmail didn't exist. You can technically use 
            us as your only email provider (set up email forwarding to forward to your SCCS mailbox 
            and read mail via command line on our SSH server), but this is an #[em extremely] bad 
            idea in the year #{ new Date().getFullYear() } for a variety of reasons. If you need to 
            receive mail to your SCCS account, it's a better idea to  forward it to an existing 
            email account.
          p.
            Under the hood, this page just provides a convenient way to edit your .forward file on
            our SSH server. (Read more about .forward files #[a(href='https://www.ibm.com/docs/en/aix/7.2?topic=files-forward-file') here].) You can forward to multiple 
            places (in which case a copy of each message will be sent to each address) and also 
            choose to deposit a copy in your local mailbox. For advanced users, you can always 
            manually edit your .forward file in your home directory on our SSH server, though if you
            edit your settings through this page it will overwrite any existing directives.

  #sshHelpModal.modal.fade(
    tabindex='-1',
    aria-labelledby='sshHelpModalTitle',
    aria-hidden='true'
  )
    .modal-dialog
      .modal-content 
        .modal-header
          h5#sshHelpModalTitle.modal-title About SSH Keys
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        .modal-body
          p.
            Your SCCS account also gives you access to our public SSH server, #[code robin], at 
            #[code ssh.sccs.swarthmore.edu]. SSH is a protocol for remotely accessing a server
            via a terminal, presenting a terminal on the remote machine via your local machine.
            This service is offered to give students accesss to more powerful hardware that SCCS
            can administrate. SSH can use password authentication, but you end up typing it in
            a million times, especially if using the VS Code SSH extension.
          p.
            An alternative is key-based authentication, using a private key that you keep secret
            and a public key you pass out that matches it. A calculation is performed when logging
            in to check if they key matches. This page allows you to drop a public key so you don't
            need to use tools like #[code ssh-copy-id], which does not work on Windows.
          p.
            Generate a
            key with #[code ssh-keygen -t ecdsa]. This utility is included by default on all modern
            operating systems. Copy the contents of the file #[code ~/.ssh/id_ecdsa.pub] and paste
            in the "Add Keys" box.

  #emailHelpModal.modal.fade(
    tabindex='-1',
    aria-labelledby='emailHelpModalTitle',
    aria-hidden='true'
  )
    .modal-dialog
      .modal-content 
        .modal-header
          h5#emailHelpModalTitle.modal-title About your account email
          button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
        .modal-body
          p.
            SCCS only asks you for your Swarthmore email on account sign-up. We used to have an
            #[code email] attribute, separate from the #[code swatmail] attribute, for alums with
            personal emails only. However, this caused issues with our new single-sign-on (SSO)
            system, as most standard authentication frameworks want just one email and not two.
          p.
            As of June 2025, we now create both #[code swatmail], your required, unique, immutable
            Swarthmore email address, and #[code email], your account email for password reset and
            service communication emails. Here, you can modify your #[code email] so you don't have
            issues down the line as an alumnus.

  script(type='text/javascript').
    const UID = '#{user.uid}';
  script(type='text/javascript', src='/dist/js/account.js')
